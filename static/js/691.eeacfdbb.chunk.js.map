{"version":3,"file":"static/js/691.eeacfdbb.chunk.js","mappings":"0OACA,EAAsB,oB,mBCcTA,EAAY,SAAHC,GAMC,IALrBC,EAASD,EAATC,UACAC,EAAWF,EAAXE,YACAC,EAAQH,EAARG,SACAC,EAAMJ,EAANI,OACAC,EAAWL,EAAXK,YAEMC,EAAOL,GAAS,QAAAM,OAAYJ,GAE5BK,EAAqB,IAAXJ,EAEhB,OACEK,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,UAAWC,EAAYC,MAAM,SAAQC,SAAA,EACxCC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,KAAM,GAAGH,UACZC,EAAAA,EAAAA,KAACG,EAAAA,EAAWC,KAAI,CAAAL,SAAER,OAEpBS,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,KAAM,EAAEH,UACXL,EAAAA,EAAAA,MAACS,EAAAA,EAAWC,KAAI,CAAAL,SAAA,CACbV,EAAOgB,WAAW,IAAElB,QAGzBa,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,KAAM,EAAEH,UACXC,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAE,aAAAf,OAAeJ,GAAWW,SAAC,cAErCC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,KAAM,EAAEH,SACVT,IAAgBG,IAAWO,EAAAA,EAAAA,KAACQ,EAAAA,GAAM,CAACC,KAAK,UAASV,SAAC,cAI3D,ECzCMW,EAAkD,CACtD,CACErB,OAAQ,QACRC,aAAa,EACbF,SAAU,IACVF,UAAW,gBACXC,YAAa,SAEf,CACEE,OAAQ,QACRC,aAAa,EACbF,SAAU,IACVF,UAAW,gBACXC,YAAa,SAEf,CACEE,OAAQ,IACRC,aAAa,EACbF,SAAU,IACVF,UAAW,gBACXC,YAAa,SAEf,CACEE,OAAQ,OACRC,aAAa,EACbF,SAAU,IACVF,UAAW,eACXC,YAAa,UAoBjB,EAhBwB,WACtB,OACEa,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACC,MAAM,UAASb,UACnBC,EAAAA,EAAAA,KAACa,EAAAA,EAAI,CACHC,UAAQ,EACRC,WAAYL,EACZM,WAAY,SAACC,GAAC,OACZjB,EAAAA,EAAAA,KAACa,EAAAA,EAAKK,KAAI,CAAAnB,UACRC,EAAAA,EAAAA,KAAChB,GAASmC,EAAAA,EAAAA,GAAA,GAAKF,KACL,KAKtB,C,qGC1BA,MAhBA,WACE,IAAIG,IAAkBC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,KAAmBA,UAAU,GAC/EG,GAAaC,EAAAA,EAAAA,QAAO,CAAC,GACrBC,ECRO,WACb,IAAAC,EAAwBC,EAAAA,YAAiB,SAAAC,GAAC,OAAIA,EAAI,CAAC,GAAE,GACrD,OADuDC,EAAAA,EAAAA,GAAAH,EAAA,GAAnC,EAEtB,CDKsBI,GACdC,GAAqBC,EAAAA,EAAAA,MAU3B,OATAC,EAAAA,EAAAA,IAAgB,WACd,IAAMC,EAAQH,EAAmBI,WAAU,SAAAC,GACzCb,EAAWc,QAAUD,EACjBjB,GACFM,GAEJ,IACA,OAAO,kBAAMM,EAAmBO,YAAYJ,EAAM,CACpD,GAAG,IACIX,EAAWc,OACpB,C","sources":["webpack://aleopad-ui/./src/entities/ticket/ui/ticket-row/styles.module.scss?38b7","entities/ticket/ui/ticket-row/index.tsx","pages/tickets-list/index.tsx","../node_modules/antd/es/grid/hooks/useBreakpoint.js","../node_modules/antd/es/_util/hooks/useForceUpdate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"row\":\"styles_row__LYdbW\"};","import React from \"react\";\nimport { Button, Col, Row, Typography } from \"antd\";\nimport BigNumber from \"bignumber.js\";\n\nimport styles from \"./styles.module.scss\";\nimport { Link } from \"react-router-dom\";\n\ninterface TicketRowProps {\n  launchId: string;\n  amount: BigNumber.Value;\n  tokenName: string;\n  tokenSymbol: string;\n  isClaimable: boolean;\n}\n\nexport const TicketRow = ({\n  tokenName,\n  tokenSymbol,\n  launchId,\n  amount,\n  isClaimable,\n}: TicketRowProps) => {\n  const name = tokenName || `Coin-${launchId}`;\n\n  const claimed = amount === 0;\n\n  return (\n    <Row className={styles.row} align=\"middle\">\n      <Col span={10}>\n        <Typography.Text>{name}</Typography.Text>\n      </Col>\n      <Col span={6}>\n        <Typography.Text>\n          {amount.toString()} {tokenSymbol}\n        </Typography.Text>\n      </Col>\n      <Col span={3}>\n        <Link to={`/launches/${launchId}`}>Launch</Link>\n      </Col>\n      <Col span={5}>\n        {isClaimable && !claimed && <Button type=\"primary\">Claim</Button>}\n      </Col>\n    </Row>\n  );\n};\n","import { Card, List } from \"antd\";\nimport { TicketRow } from \"entities/ticket\";\n\nconst tickets: Array<Parameters<typeof TicketRow>[0]> = [\n  {\n    amount: \"10000\",\n    isClaimable: false,\n    launchId: \"1\",\n    tokenName: \"AleoPad Token\",\n    tokenSymbol: \"ALPDT\",\n  },\n  {\n    amount: \"35000\",\n    isClaimable: false,\n    launchId: \"1\",\n    tokenName: \"AleoPad Token\",\n    tokenSymbol: \"ALPDT\",\n  },\n  {\n    amount: \"0\",\n    isClaimable: false,\n    launchId: \"1\",\n    tokenName: \"AleoPad Token\",\n    tokenSymbol: \"ALPDT\",\n  },\n  {\n    amount: \"5000\",\n    isClaimable: true,\n    launchId: \"3\",\n    tokenName: \"Some token 2\",\n    tokenSymbol: \"SMTN2\",\n  },\n];\n\nconst TicketsListPage = () => {\n  return (\n    <Card title=\"Tickets\">\n      <List\n        bordered\n        dataSource={tickets}\n        renderItem={(t) => (\n          <List.Item>\n            <TicketRow {...t} />\n          </List.Item>\n        )}\n      />\n    </Card>\n  );\n};\n\nexport default TicketsListPage;\n","\"use client\";\n\nimport { useRef } from 'react';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useForceUpdate from '../../_util/hooks/useForceUpdate';\nimport useResponsiveObserver from '../../_util/responsiveObserver';\nfunction useBreakpoint() {\n  let refreshOnChange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const screensRef = useRef({});\n  const forceUpdate = useForceUpdate();\n  const responsiveObserver = useResponsiveObserver();\n  useLayoutEffect(() => {\n    const token = responsiveObserver.subscribe(supportScreens => {\n      screensRef.current = supportScreens;\n      if (refreshOnChange) {\n        forceUpdate();\n      }\n    });\n    return () => responsiveObserver.unsubscribe(token);\n  }, []);\n  return screensRef.current;\n}\nexport default useBreakpoint;","import * as React from 'react';\nexport default function useForceUpdate() {\n  const [, forceUpdate] = React.useReducer(x => x + 1, 0);\n  return forceUpdate;\n}"],"names":["TicketRow","_ref","tokenName","tokenSymbol","launchId","amount","isClaimable","name","concat","claimed","_jsxs","Row","className","styles","align","children","_jsx","Col","span","Typography","Text","toString","Link","to","Button","type","tickets","Card","title","List","bordered","dataSource","renderItem","t","Item","_objectSpread","refreshOnChange","arguments","length","undefined","screensRef","useRef","forceUpdate","_React$useReducer","React","x","_slicedToArray","useForceUpdate","responsiveObserver","useResponsiveObserver","useLayoutEffect","token","subscribe","supportScreens","current","unsubscribe"],"sourceRoot":""}