{"version":3,"file":"static/js/71.e61746a5.chunk.js","mappings":"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","sources":["entities/token/ui/token-info/index.tsx","webpack://aleopad-ui/./src/entities/token/ui/token-row/style.module.scss?d3e1","entities/token/ui/token-row/index.tsx","pages/token-info/index.tsx","shared/db/repository/index.ts","shared/db/launches/index.ts","shared/db/tokens/index.ts","shared/hooks/useLaunch.ts","shared/hooks/useToken.ts"],"sourcesContent":["import { useEffect } from \"react\";\nimport {\n  Descriptions,\n  DescriptionsProps,\n  notification,\n  Typography,\n  Skeleton,\n} from \"antd\";\n\nimport { useToken } from \"shared/hooks\";\n\ntype TokenCardProps = {\n  tokenId: string;\n};\n\nexport default function TokenInfo({ tokenId }: TokenCardProps) {\n  const { token, error } = useToken(tokenId);\n  const [api, contextHolder] = notification.useNotification();\n\n  const items: DescriptionsProps[\"items\"] = [\n    {\n      key: \"1\",\n      label: \"Name\",\n      children: token ? (\n        <Typography.Text>{token.name}</Typography.Text>\n      ) : (\n        <Skeleton.Input />\n      ),\n    },\n    {\n      key: \"2\",\n      label: \"Symbol\",\n      children: token ? (\n        <Typography.Text>{token.symbol.toUpperCase()}</Typography.Text>\n      ) : (\n        <Skeleton.Input />\n      ),\n    },\n    {\n      key: \"3\",\n      label: \"Decimals\",\n      children: token ? (\n        <Typography.Text>{token.decimals}</Typography.Text>\n      ) : (\n        <Skeleton.Input />\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    if (error) {\n      api.error({\n        message: \"Token loading error\",\n        description: error,\n      });\n    }\n  }, [error]);\n\n  return (\n    <>\n      {contextHolder}\n      <Descriptions title=\"Token\" items={items} layout=\"vertical\" />\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"style_row__sMVKO\"};","import { useNavigate } from \"react-router\";\nimport { useCallback } from \"react\";\n\nimport { Token } from \"../../model\";\n\nimport styles from \"./style.module.scss\";\nimport { Col, Row, Typography } from \"antd\";\n\ntype TokenRowProps = {\n  token: Token;\n};\n\nexport default function TokenRow({ token }: TokenRowProps) {\n  const navigate = useNavigate();\n\n  const onLaunchClick = useCallback(() => {\n    navigate(`/tokens/${token.id}`);\n  }, [token.id, navigate]);\n\n  return (\n    <Row className={styles.row}>\n      <Col span={20}>\n        <Typography.Link onClick={onLaunchClick}>{token.name}</Typography.Link>\n      </Col>\n      <Col span={4}>\n        <Typography.Text>{token.decimals}</Typography.Text>\n      </Col>\n    </Row>\n  );\n}\n","import { Card } from \"antd\";\nimport { TokenInfo } from \"entities/token\";\nimport { useParams } from \"react-router\";\n\nconst TokenPage = () => {\n  const { id } = useParams();\n  return (\n    <Card>\n      <TokenInfo tokenId={id!!} />\n    </Card>\n  );\n};\n\nexport default TokenPage;\n","export default class Repository<T extends object> {\n  constructor(public readonly key: string) {}\n\n  private getStorageKey() {\n    return `aleopad_${this.key}`;\n  }\n\n  load(): Array<T> {\n    const storageText = localStorage.getItem(this.getStorageKey());\n\n    const result = storageText ? JSON.parse(storageText) : [];\n\n    return result;\n  }\n\n  save(data: Array<T>) {\n    localStorage.setItem(this.getStorageKey(), JSON.stringify(data));\n  }\n\n  append(...newData: Array<T>) {\n    const data = this.load();\n    this.save(data.concat(newData));\n  }\n}\n","import Repository from \"../repository\";\n\nexport interface Launch {\n  id: string;\n  numerator: string;\n  denominator: string;\n  sellStartBlock: number;\n  sellBlockDuration: number;\n  claimStartBlock: number;\n  claimBlockDuration: number;\n  adminAddress: string;\n  flags: {\n    isPrivateSellsEnabled: boolean;\n    isPublicSellsEnabled: boolean;\n    isCapEnabled: boolean;\n  };\n  tokenId?: string;\n}\n\nexport const launches = new Repository<Launch>(\"launches\");\n","import Repository from \"../repository\";\n\nexport interface Token {\n  id: string;\n  name: string;\n  symbol: string;\n  decimals: number;\n}\n\nexport const tokens = new Repository<Token>(\"tokens\");\n","import { launches, Launch } from \"shared/db\";\nimport { normalizeFieldId, getLaunchById } from \"shared/web3\";\nimport { useEffect, useState } from \"react\";\n\ntype LaunchState = {\n  launch?: Launch;\n  loading: boolean;\n  error?: string;\n};\n\nexport function useLaunch(id: string): LaunchState {\n  const normalizedId = normalizeFieldId(id);\n  const [launch, setLaunch] = useState(() =>\n    launches.load().find((t) => t.id === normalizedId)\n  );\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | undefined>(undefined);\n\n  useEffect(() => {\n    if (!launch) {\n      setLoading(true);\n      setError(undefined);\n      getLaunchById(normalizedId)\n        .then((fetched) => {\n          const mappedLaunch: Launch = {\n            id: normalizedId,\n            adminAddress: fetched.adminAddress,\n            sellStartBlock: fetched.sellStartBlock,\n            sellBlockDuration: fetched.sellBlockDuration,\n            claimStartBlock: fetched.claimStartBlock,\n            claimBlockDuration: fetched.claimBlockDuration,\n            numerator: fetched.numerator.toFixed(),\n            denominator: fetched.denominator.toFixed(),\n            flags: fetched.flags,\n            tokenId: fetched.tokenId\n              ? normalizeFieldId(fetched.tokenId)\n              : undefined,\n          };\n          launches.append(mappedLaunch);\n          setLaunch(mappedLaunch);\n          setLoading(false);\n        })\n        .catch((err) => {\n          setLoading(false);\n          setError(String(err));\n        });\n    }\n  }, [launch, normalizedId]);\n\n  return {\n    launch,\n    loading,\n    error,\n  };\n}\n","import { tokens } from \"shared/db\";\nimport { fieldToText, normalizeFieldId, getTokenById } from \"shared/web3\";\nimport { useEffect, useState } from \"react\";\n\nimport { Token } from \"shared/db\";\n\ntype TokenState = {\n  token?: Token;\n  loading: boolean;\n  error?: string;\n};\n\nexport function useToken(id?: string): TokenState {\n  const normalizedId = id ? normalizeFieldId(id) : undefined;\n  const [token, setToken] = useState(() =>\n    normalizedId ? tokens.load().find((t) => t.id === normalizedId) : undefined\n  );\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | undefined>(undefined);\n\n  useEffect(() => {\n    if (normalizedId) {\n      setToken(tokens.load().find((t) => t.id === normalizedId));\n    }\n  }, [normalizedId]);\n\n  useEffect(() => {\n    if (!token && normalizedId) {\n      setLoading(true);\n      setError(undefined);\n      getTokenById(normalizedId)\n        .then((fetched) => {\n          const mappedToken = {\n            id: normalizeFieldId(fetched.id),\n            decimals: fetched.decimals,\n            name: fieldToText(fetched.name),\n            symbol: fieldToText(fetched.symbol),\n          };\n          tokens.append(mappedToken);\n          setToken(mappedToken);\n          setLoading(false);\n        })\n        .catch((err) => {\n          setLoading(false);\n          setError(String(err));\n        });\n    }\n  }, [token, normalizedId]);\n\n  return {\n    token,\n    loading,\n    error,\n  };\n}\n"],"names":["TokenInfo","_ref","tokenId","_useToken","useToken","token","error","_notification$useNoti","notification","useNotification","_notification$useNoti2","_slicedToArray","api","contextHolder","items","key","label","children","_jsx","Typography","Text","name","Skeleton","Input","symbol","toUpperCase","decimals","useEffect","message","description","_jsxs","_Fragment","Descriptions","title","layout","TokenRow","navigate","useNavigate","onLaunchClick","useCallback","concat","id","Row","className","styles","row","Col","span","Link","onClick","useParams","Card","Repository","_classCallCheck","_createClass","value","this","storageText","localStorage","getItem","getStorageKey","JSON","parse","data","setItem","stringify","load","_len","arguments","length","newData","Array","_key","save","launches","tokens","useLaunch","normalizedId","normalizeFieldId","_useState","useState","find","t","_useState2","launch","setLaunch","_useState3","_useState4","loading","setLoading","_useState5","undefined","_useState6","setError","getLaunchById","then","fetched","mappedLaunch","adminAddress","sellStartBlock","sellBlockDuration","claimStartBlock","claimBlockDuration","numerator","toFixed","denominator","flags","append","catch","err","String","setToken","getTokenById","mappedToken","fieldToText"],"sourceRoot":""}